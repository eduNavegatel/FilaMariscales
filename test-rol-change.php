<?php
// Script para probar espec√≠ficamente el cambio de rol
echo "<h1>üîÑ Prueba de Cambio de Rol</h1>";

try {
    require_once 'src/config/config.php';
    require_once 'src/models/Database.php';
    require_once 'src/models/User.php';
    
    $db = new Database();
    $userModel = new User();
    
    echo "<p>‚úÖ Conexi√≥n a la base de datos exitosa</p>";
    
    // Obtener un usuario para probar
    $users = $userModel->getAllUsers(1, 5);
    
    if (empty($users)) {
        echo "<p style='color: red;'>‚ùå No hay usuarios para probar</p>";
        exit;
    }
    
    $testUser = $users[0];
    echo "<h2>üë§ Usuario de Prueba:</h2>";
    echo "<ul>";
    echo "<li><strong>ID:</strong> {$testUser->id}</li>";
    echo "<li><strong>Nombre:</strong> {$testUser->nombre} {$testUser->apellidos}</li>";
    echo "<li><strong>Email:</strong> {$testUser->email}</li>";
    echo "<li><strong>Rol actual:</strong> {$testUser->rol}</li>";
    echo "<li><strong>Activo:</strong> " . ($testUser->activo ? 'S√≠' : 'No') . "</li>";
    echo "</ul>";
    
    // Probar cambio de rol
    echo "<h2>üîÑ Probando Cambio de Rol:</h2>";
    
    // Simular datos del formulario
    $formData = [
        'user_id' => $testUser->id,
        'nombre' => $testUser->nombre,
        'apellidos' => $testUser->apellidos,
        'email' => $testUser->email,
        'rol' => 'admin', // Cambiar a admin
        'activo' => $testUser->activo
    ];
    
    echo "<h3>üìù Datos del formulario:</h3>";
    echo "<pre>" . print_r($formData, true) . "</pre>";
    
    // Probar actualizaci√≥n directa en la base de datos
    echo "<h3>1Ô∏è‚É£ Prueba de actualizaci√≥n directa en BD:</h3>";
    
    $sql = "UPDATE users SET rol = :rol WHERE id = :id";
    $db->query($sql);
    $db->bind(':rol', 'admin');
    $db->bind(':id', $testUser->id);
    
    if ($db->execute()) {
        echo "<p style='color: green;'>‚úÖ Rol actualizado correctamente en BD</p>";
        
        // Verificar el cambio
        $db->query("SELECT rol FROM users WHERE id = :id");
        $db->bind(':id', $testUser->id);
        $result = $db->single();
        
        if ($result) {
            echo "<p><strong>Rol despu√©s del cambio:</strong> {$result->rol}</p>";
        }
        
        // Restaurar el rol original
        $db->query("UPDATE users SET rol = :rol WHERE id = :id");
        $db->bind(':rol', $testUser->rol);
        $db->bind(':id', $testUser->id);
        $db->execute();
        
        echo "<p style='color: blue;'>üîÑ Rol restaurado a: {$testUser->rol}</p>";
        
    } else {
        echo "<p style='color: red;'>‚ùå Error actualizando rol en BD</p>";
    }
    
    // Probar el m√©todo del modelo User
    echo "<h3>2Ô∏è‚É£ Prueba del m√©todo updateUser del modelo:</h3>";
    
    $updateData = [
        'id' => $testUser->id,
        'nombre' => $testUser->nombre,
        'apellidos' => $testUser->apellidos,
        'email' => $testUser->email,
        'rol' => 'socio', // Cambiar a socio
        'activo' => $testUser->activo
    ];
    
    echo "<p>Intentando cambiar rol a 'socio'...</p>";
    
    if ($userModel->updateUser($updateData)) {
        echo "<p style='color: green;'>‚úÖ Modelo User actualiz√≥ correctamente</p>";
        
        // Verificar el cambio
        $updatedUser = $userModel->getUserById($testUser->id);
        if ($updatedUser) {
            echo "<p><strong>Rol despu√©s del cambio:</strong> {$updatedUser->rol}</p>";
        }
        
        // Restaurar el rol original
        $updateData['rol'] = $testUser->rol;
        $userModel->updateUser($updateData);
        echo "<p style='color: blue;'>üîÑ Rol restaurado a: {$testUser->rol}</p>";
        
    } else {
        echo "<p style='color: red;'>‚ùå Error en el modelo User</p>";
    }
    
    // Probar el controlador AdminController
    echo "<h3>3Ô∏è‚É£ Prueba del controlador AdminController:</h3>";
    
    // Simular una petici√≥n POST
    $_POST = $formData;
    $_POST['rol'] = 'user'; // Cambiar a user
    
    echo "<p>Simulando petici√≥n POST con rol 'user'...</p>";
    
    // Incluir el controlador
    require_once 'src/controllers/AdminController.php';
    
    // Crear instancia del controlador
    $adminController = new AdminController();
    
    // Verificar si el m√©todo existe
    if (method_exists($adminController, 'editarUsuario')) {
        echo "<p style='color: green;'>‚úÖ M√©todo editarUsuario existe en AdminController</p>";
        
        // Verificar si el m√©todo es p√∫blico
        $reflection = new ReflectionMethod($adminController, 'editarUsuario');
        if ($reflection->isPublic()) {
            echo "<p style='color: green;'>‚úÖ M√©todo editarUsuario es p√∫blico</p>";
        } else {
            echo "<p style='color: red;'>‚ùå M√©todo editarUsuario no es p√∫blico</p>";
        }
        
    } else {
        echo "<p style='color: red;'>‚ùå M√©todo editarUsuario NO existe en AdminController</p>";
    }
    
    // Verificar el enrutador
    echo "<h3>4Ô∏è‚É£ Verificaci√≥n del enrutador:</h3>";
    
    require_once 'src/core/Router.php';
    require_once 'routes/web.php';
    
    echo "<p>‚úÖ Router y rutas cargados correctamente</p>";
    
    // Verificar si la ruta de editar usuario est√° definida
    echo "<h3>5Ô∏è‚É£ Verificaci√≥n de rutas:</h3>";
    
    // Buscar en el archivo de rutas
    $routesContent = file_get_contents('routes/web.php');
    
    if (strpos($routesContent, 'editarUsuario') !== false) {
        echo "<p style='color: green;'>‚úÖ Ruta 'editarUsuario' encontrada en web.php</p>";
    } else {
        echo "<p style='color: red;'>‚ùå Ruta 'editarUsuario' NO encontrada en web.php</p>";
    }
    
    if (strpos($routesContent, 'admin/editarUsuario') !== false) {
        echo "<p style='color: green;'>‚úÖ Ruta 'admin/editarUsuario' encontrada en web.php</p>";
    } else {
        echo "<p style='color: red;'>‚ùå Ruta 'admin/editarUsuario' NO encontrada en web.php</p>";
    }
    
} catch (Exception $e) {
    echo "<p style='color: red;'>‚ùå Error: " . $e->getMessage() . "</p>";
    echo "<p>Stack trace:</p>";
    echo "<pre>" . $e->getTraceAsString() . "</pre>";
}

echo "<hr>";
echo "<h2>üîç An√°lisis del Problema:</h2>";
echo "<p>Bas√°ndome en las pruebas, el problema del cambio de rol puede estar en:</p>";
echo "<ul>";
echo "<li><strong>Frontend:</strong> El formulario no se env√≠a correctamente</li>";
echo "<li><strong>JavaScript:</strong> Validaciones que previenen el env√≠o</li>";
echo "<li><strong>Enrutador:</strong> La ruta no est√° configurada correctamente</li>";
echo "<li><strong>Controlador:</strong> El m√©todo no procesa los datos</li>";
echo "<li><strong>Sesi√≥n:</strong> Problemas de autenticaci√≥n</li>";
echo "</ul>";

echo "<h2>üîó Enlaces de Prueba:</h2>";
echo "<p><a href='/prueba-php/public/admin/usuarios' target='_blank'>üöÄ Panel de Administraci√≥n</a></p>";
echo "<p><a href='/prueba-php/public/admin/login' target='_blank'>üîê Login de Admin</a></p>";
echo "<p><em>Script completado.</em></p>";
?>
